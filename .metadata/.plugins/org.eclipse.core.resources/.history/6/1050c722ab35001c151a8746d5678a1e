package com.ICINBank.ICINbanking.validators;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.Errors;
import org.springframework.validation.ObjectError;
import org.springframework.validation.Validator;

import com.ICINBank.ICINbanking.POJO.DepositOrWithdrawPOJO;
import com.ICINBank.ICINbanking.model.Customer;
import com.ICINBank.ICINbanking.service.CustomerService;

public class DepositOrWithdrawValidator implements Validator{

	@Autowired
	private CustomerService customerService;
	
	@Override
	public boolean supports(Class<?> clazz) {
		
		return DepositOrWithdrawPOJO.class.equals(clazz);
	}

	@Override
	public void validate(Object target, Errors errors) {
		
		DepositOrWithdrawPOJO depositOrWithdrawPOJO = (DepositOrWithdrawPOJO)target;
		Customer cust = customerService.findByUserName(depositOrWithdrawPOJO.getCustomerName());
		
		String errorMessage = null;

		if(depositOrWithdrawPOJO.getAmount() <= 0) {
			errorMessage = "Enter Valid Amount";
		}else if(depositOrWithdrawPOJO.getActionType().equalsIgnoreCase("withdraw")) {
			if(depositOrWithdrawPOJO.getAccountType().equalsIgnoreCase("savings") && (depositOrWithdrawPOJO.getAmount() > customer.getSavingsAccount().getAmount())) {
				errorMessage="Insufficient Amount";
			}else if(depositOrWithdrawPOJO.getAccountType().equalsIgnoreCase("primary") && (depositOrWithdrawPOJO.getAmount() > customer.getCurrentAccount().getAmount())) {
				errorMessage="Insufficient Amount";
			}
			
		}
		
		String objName=depositOrWithdrawPOJO.getActionType()+"Error";
			
		if(errorMessage != null) {
			ObjectError error = new ObjectError("depositOrWithdrawPOJOError",errorMessage);
			bindingResult.addError(error);
		}
		
	}

}
